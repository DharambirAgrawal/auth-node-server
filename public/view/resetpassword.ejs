<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="/css/resetpassword.css">
    
</head>
<body>
    <div class="container">
        <h2>Reset Password</h2>
        <form id="resetPasswordForm" onsubmit="handleSubmit(event)">
            <div class="form-group">
                <label for="password">New Password</label>
                <div class="password-input-wrapper">
                    <input 
                        type="password" 
                        id="password" 
                        class="password-input" 
                        required
                        onInput="handlePasswordInput(this.value)"
                    >
                    <button type="button" class="toggle-password" onclick="togglePassword('password')">
                        üëÅÔ∏è
                    </button>
                </div>
                <div class="password-strength">
                    <div class="strength-meter"></div>
                </div>
                <div class="password-requirements">
                    <div class="requirement" id="length">At least 8 characters</div>
                    <div class="requirement" id="uppercase">One uppercase letter</div>
                    <div class="requirement" id="lowercase">One lowercase letter</div>
                    <div class="requirement" id="number">One number</div>
                    <div class="requirement" id="special">One special character</div>
                </div>
            </div>

            <div class="form-group">
                <label for="confirm-password">Confirm Password</label>
                <div class="password-input-wrapper">
                    <input 
                        type="password" 
                        id="confirm-password" 
                        class="password-input" 
                        required
                        onInput="handleConfirmPassword(this.value)"
                    >
                    <button type="button" class="toggle-password" onclick="togglePassword('confirm-password')">
                        üëÅÔ∏è
                    </button>
                </div>
                <div class="error-message" id="password-match-error">Passwords do not match</div>
            </div>

            <button type="submit" class="btn" id="submit-btn" disabled>Reset Password</button>
            <div class="success-message" id="success-message">
                Password successfully reset!
            </div>
        </form>
    </div>

    <script>
        let passwordValid = false;
        let passwordsMatch = false;

        function handlePasswordInput(password) {
            const requirements = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /[0-9]/.test(password),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
            };

            // Update requirement indicators
            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(req);
                if (requirements[req]) {
                    element.classList.add('valid');
                    element.innerHTML = '‚úì ' + element.innerHTML.replace('‚úì ', '').replace('‚úó ', '');
                } else {
                    element.classList.remove('valid');
                    element.innerHTML = '‚úó ' + element.innerHTML.replace('‚úì ', '').replace('‚úó ', '');
                }
            });

            // Calculate password strength
            const strengthMeter = document.querySelector('.strength-meter');
            const strength = Object.values(requirements).filter(Boolean).length;
            const strengthPercentage = (strength / 5) * 100;
            strengthMeter.style.width = strengthPercentage + '%';

            if (strengthPercentage <= 20) {
                strengthMeter.style.backgroundColor = '#ef4444';
            } else if (strengthPercentage <= 40) {
                strengthMeter.style.backgroundColor = '#f97316';
            } else if (strengthPercentage <= 60) {
                strengthMeter.style.backgroundColor = '#eab308';
            } else if (strengthPercentage <= 80) {
                strengthMeter.style.backgroundColor = '#84cc16';
            } else {
                strengthMeter.style.backgroundColor = '#22c55e';
            }

            passwordValid = Object.values(requirements).every(Boolean);
            updateSubmitButton();
            
            // Check if confirm password matches
            const confirmPassword = document.getElementById('confirm-password').value;
            handleConfirmPassword(confirmPassword);
        }

        function handleConfirmPassword(confirmPassword) {
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('password-match-error');
            
            passwordsMatch = password === confirmPassword;
            errorMessage.style.display = confirmPassword && !passwordsMatch ? 'block' : 'none';
            
            updateSubmitButton();
        }

        function updateSubmitButton() {
            const submitButton = document.getElementById('submit-btn');
            submitButton.disabled = !(passwordValid && passwordsMatch);
        }

        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            input.type = input.type === 'password' ? 'text' : 'password';
        }

        function handleSubmit(event) {
            event.preventDefault();
            
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            
            // Here you would typically send the password to your server
            console.log('Password:', password);
            console.log('Confirm Password:', confirmPassword);
            
            // Show success message
            document.getElementById('success-message').style.display = 'block';
            
            // Reset form
            document.getElementById('resetPasswordForm').reset();
            document.querySelector('.strength-meter').style.width = '0';
            document.querySelectorAll('.requirement').forEach(req => {
                req.classList.remove('valid');
                req.innerHTML = req.innerHTML.replace('‚úì ', '').replace('‚úó ', '');
            });
            
            // Hide success message after 3 seconds
            setTimeout(() => {
                document.getElementById('success-message').style.display = 'none';
            }, 10000);

            const token = '<%= token %>';
        const env = '<%= env %>';
        console.log('Token:', token, 'Env:', env);
            // fetch("")
        }
    </script>
</body>
</html>